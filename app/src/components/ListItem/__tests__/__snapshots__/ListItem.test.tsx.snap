// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`List component should render correctly if title 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListItem
    athletFinishTime="Finish"
    athletFullName="Name"
    athletNumber="F4"
    index={1}
    place="Place"
    title={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="col place"
        >
          <span
            className="content"
          >
            
            Place
          </span>
        </div>,
        <div
          className="col starting-number"
        >
          <span
            className="content"
          >
            F4
          </span>
        </div>,
        <div
          className="col full-name"
        >
          <span
            className="content"
          >
            Name
          </span>
        </div>,
        <div
          className="col finish-time"
        >
          <span
            className="content"
          >
            
            Finish
          </span>
        </div>,
      ],
      "className": " table-line title  finished ",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="content"
          >
            
            Place
          </span>,
          "className": "col place",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "",
              "Place",
            ],
            "className": "content",
          },
          "ref": null,
          "rendered": Array [
            "",
            "Place",
          ],
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="content"
          >
            F4
          </span>,
          "className": "col starting-number",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "F4",
            "className": "content",
          },
          "ref": null,
          "rendered": "F4",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="content"
          >
            Name
          </span>,
          "className": "col full-name",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Name",
            "className": "content",
          },
          "ref": null,
          "rendered": "Name",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="content"
          >
            
            Finish
          </span>,
          "className": "col finish-time",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "",
              "Finish",
            ],
            "className": "content",
          },
          "ref": null,
          "rendered": Array [
            "",
            "Finish",
          ],
          "type": "span",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col place"
          >
            <span
              className="content"
            >
              
              Place
            </span>
          </div>,
          <div
            className="col starting-number"
          >
            <span
              className="content"
            >
              F4
            </span>
          </div>,
          <div
            className="col full-name"
          >
            <span
              className="content"
            >
              Name
            </span>
          </div>,
          <div
            className="col finish-time"
          >
            <span
              className="content"
            >
              
              Finish
            </span>
          </div>,
        ],
        "className": " table-line title  finished ",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="content"
            >
              
              Place
            </span>,
            "className": "col place",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "",
                "Place",
              ],
              "className": "content",
            },
            "ref": null,
            "rendered": Array [
              "",
              "Place",
            ],
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="content"
            >
              F4
            </span>,
            "className": "col starting-number",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "F4",
              "className": "content",
            },
            "ref": null,
            "rendered": "F4",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="content"
            >
              Name
            </span>,
            "className": "col full-name",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Name",
              "className": "content",
            },
            "ref": null,
            "rendered": "Name",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="content"
            >
              
              Finish
            </span>,
            "className": "col finish-time",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "",
                "Finish",
              ],
              "className": "content",
            },
            "ref": null,
            "rendered": Array [
              "",
              "Finish",
            ],
            "type": "span",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
