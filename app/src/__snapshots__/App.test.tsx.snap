// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`APP component to match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    athlets={
      Array [
        Object {
          "code": "123",
          "entering": 1,
          "finish": 2,
          "full_name": "first name",
          "id": 1,
          "start_nr": "123",
        },
        Object {
          "code": "124",
          "entering": 2,
          "finish": 1,
          "full_name": "first name",
          "id": 2,
          "start_nr": "124",
        },
      ]
    }
    setAthletes={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="App"
      >
        <List
          athlets={
            Array [
              Object {
                "code": "123",
                "entering": 1,
                "finish": 2,
                "full_name": "first name",
                "id": 1,
                "start_nr": "123",
              },
              Object {
                "code": "124",
                "entering": 2,
                "finish": 1,
                "full_name": "first name",
                "id": 2,
                "start_nr": "124",
              },
            ]
          }
        />
      </div>,
      "onChange": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <List
          athlets={
            Array [
              Object {
                "code": "123",
                "entering": 1,
                "finish": 2,
                "full_name": "first name",
                "id": 1,
                "start_nr": "123",
              },
              Object {
                "code": "124",
                "entering": 2,
                "finish": 1,
                "full_name": "first name",
                "id": 2,
                "start_nr": "124",
              },
            ]
          }
        />,
        "className": "App",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "athlets": Array [
            Object {
              "code": "123",
              "entering": 1,
              "finish": 2,
              "full_name": "first name",
              "id": 1,
              "start_nr": "123",
            },
            Object {
              "code": "124",
              "entering": 2,
              "finish": 1,
              "full_name": "first name",
              "id": 2,
              "start_nr": "124",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="App"
        >
          <List
            athlets={
              Array [
                Object {
                  "code": "123",
                  "entering": 1,
                  "finish": 2,
                  "full_name": "first name",
                  "id": 1,
                  "start_nr": "123",
                },
                Object {
                  "code": "124",
                  "entering": 2,
                  "finish": 1,
                  "full_name": "first name",
                  "id": 2,
                  "start_nr": "124",
                },
              ]
            }
          />
        </div>,
        "onChange": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <List
            athlets={
              Array [
                Object {
                  "code": "123",
                  "entering": 1,
                  "finish": 2,
                  "full_name": "first name",
                  "id": 1,
                  "start_nr": "123",
                },
                Object {
                  "code": "124",
                  "entering": 2,
                  "finish": 1,
                  "full_name": "first name",
                  "id": 2,
                  "start_nr": "124",
                },
              ]
            }
          />,
          "className": "App",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "athlets": Array [
              Object {
                "code": "123",
                "entering": 1,
                "finish": 2,
                "full_name": "first name",
                "id": 1,
                "start_nr": "123",
              },
              Object {
                "code": "124",
                "entering": 2,
                "finish": 1,
                "full_name": "first name",
                "id": 2,
                "start_nr": "124",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
